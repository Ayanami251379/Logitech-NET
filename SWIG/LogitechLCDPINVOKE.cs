/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

class LogitechLCDPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [DllImport("LogitechLCD", EntryPoint="SWIGRegisterExceptionCallbacks_LogitechLCD")]
    public static extern void SWIGRegisterExceptionCallbacks_LogitechLCD(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [DllImport("LogitechLCD", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_LogitechLCD")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_LogitechLCD(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_LogitechLCD(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_LogitechLCD(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [ThreadStatic]
    private static Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(Exception e) {
      if (pendingException != null)
        throw new ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(LogitechLCDPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static Exception Retrieve() {
      Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(LogitechLCDPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [DllImport("LogitechLCD", EntryPoint="SWIGRegisterStringCallback_LogitechLCD")]
    public static extern void SWIGRegisterStringCallback_LogitechLCD(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_LogitechLCD(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static LogitechLCDPINVOKE() {
  }


  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_INVALID_CONNECTION_get")]
  public static extern int LGLCD_INVALID_CONNECTION_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_INVALID_DEVICE_get")]
  public static extern int LGLCD_INVALID_DEVICE_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCDBUTTON_LEFT_get")]
  public static extern int LGLCDBUTTON_LEFT_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCDBUTTON_RIGHT_get")]
  public static extern int LGLCDBUTTON_RIGHT_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCDBUTTON_OK_get")]
  public static extern int LGLCDBUTTON_OK_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCDBUTTON_CANCEL_get")]
  public static extern int LGLCDBUTTON_CANCEL_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCDBUTTON_UP_get")]
  public static extern int LGLCDBUTTON_UP_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCDBUTTON_DOWN_get")]
  public static extern int LGLCDBUTTON_DOWN_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCDBUTTON_MENU_get")]
  public static extern int LGLCDBUTTON_MENU_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCDBUTTON_BUTTON0_get")]
  public static extern int LGLCDBUTTON_BUTTON0_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCDBUTTON_BUTTON1_get")]
  public static extern int LGLCDBUTTON_BUTTON1_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCDBUTTON_BUTTON2_get")]
  public static extern int LGLCDBUTTON_BUTTON2_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCDBUTTON_BUTTON3_get")]
  public static extern int LGLCDBUTTON_BUTTON3_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCDBUTTON_BUTTON4_get")]
  public static extern int LGLCDBUTTON_BUTTON4_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCDBUTTON_BUTTON5_get")]
  public static extern int LGLCDBUTTON_BUTTON5_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCDBUTTON_BUTTON6_get")]
  public static extern int LGLCDBUTTON_BUTTON6_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCDBUTTON_BUTTON7_get")]
  public static extern int LGLCDBUTTON_BUTTON7_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDesc_Width_set")]
  public static extern void lgLcdDeviceDesc_Width_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDesc_Width_get")]
  public static extern uint lgLcdDeviceDesc_Width_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDesc_Height_set")]
  public static extern void lgLcdDeviceDesc_Height_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDesc_Height_get")]
  public static extern uint lgLcdDeviceDesc_Height_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDesc_Bpp_set")]
  public static extern void lgLcdDeviceDesc_Bpp_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDesc_Bpp_get")]
  public static extern uint lgLcdDeviceDesc_Bpp_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDesc_NumSoftButtons_set")]
  public static extern void lgLcdDeviceDesc_NumSoftButtons_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDesc_NumSoftButtons_get")]
  public static extern uint lgLcdDeviceDesc_NumSoftButtons_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_new_lgLcdDeviceDesc")]
  public static extern IntPtr new_lgLcdDeviceDesc();

  [DllImport("LogitechLCD", EntryPoint="CSharp_delete_lgLcdDeviceDesc")]
  public static extern void delete_lgLcdDeviceDesc(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExW_deviceFamilyId_set")]
  public static extern void lgLcdDeviceDescExW_deviceFamilyId_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExW_deviceFamilyId_get")]
  public static extern uint lgLcdDeviceDescExW_deviceFamilyId_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExW_deviceDisplayName_set")]
  public static extern void lgLcdDeviceDescExW_deviceDisplayName_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExW_deviceDisplayName_get")]
  public static extern IntPtr lgLcdDeviceDescExW_deviceDisplayName_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExW_Width_set")]
  public static extern void lgLcdDeviceDescExW_Width_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExW_Width_get")]
  public static extern uint lgLcdDeviceDescExW_Width_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExW_Height_set")]
  public static extern void lgLcdDeviceDescExW_Height_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExW_Height_get")]
  public static extern uint lgLcdDeviceDescExW_Height_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExW_Bpp_set")]
  public static extern void lgLcdDeviceDescExW_Bpp_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExW_Bpp_get")]
  public static extern uint lgLcdDeviceDescExW_Bpp_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExW_NumSoftButtons_set")]
  public static extern void lgLcdDeviceDescExW_NumSoftButtons_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExW_NumSoftButtons_get")]
  public static extern uint lgLcdDeviceDescExW_NumSoftButtons_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExW_Reserved1_set")]
  public static extern void lgLcdDeviceDescExW_Reserved1_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExW_Reserved1_get")]
  public static extern uint lgLcdDeviceDescExW_Reserved1_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExW_Reserved2_set")]
  public static extern void lgLcdDeviceDescExW_Reserved2_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExW_Reserved2_get")]
  public static extern uint lgLcdDeviceDescExW_Reserved2_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_new_lgLcdDeviceDescExW")]
  public static extern IntPtr new_lgLcdDeviceDescExW();

  [DllImport("LogitechLCD", EntryPoint="CSharp_delete_lgLcdDeviceDescExW")]
  public static extern void delete_lgLcdDeviceDescExW(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExA_deviceFamilyId_set")]
  public static extern void lgLcdDeviceDescExA_deviceFamilyId_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExA_deviceFamilyId_get")]
  public static extern uint lgLcdDeviceDescExA_deviceFamilyId_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExA_deviceDisplayName_set")]
  public static extern void lgLcdDeviceDescExA_deviceDisplayName_set(HandleRef jarg1, string jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExA_deviceDisplayName_get")]
  public static extern string lgLcdDeviceDescExA_deviceDisplayName_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExA_Width_set")]
  public static extern void lgLcdDeviceDescExA_Width_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExA_Width_get")]
  public static extern uint lgLcdDeviceDescExA_Width_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExA_Height_set")]
  public static extern void lgLcdDeviceDescExA_Height_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExA_Height_get")]
  public static extern uint lgLcdDeviceDescExA_Height_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExA_Bpp_set")]
  public static extern void lgLcdDeviceDescExA_Bpp_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExA_Bpp_get")]
  public static extern uint lgLcdDeviceDescExA_Bpp_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExA_NumSoftButtons_set")]
  public static extern void lgLcdDeviceDescExA_NumSoftButtons_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExA_NumSoftButtons_get")]
  public static extern uint lgLcdDeviceDescExA_NumSoftButtons_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExA_Reserved1_set")]
  public static extern void lgLcdDeviceDescExA_Reserved1_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExA_Reserved1_get")]
  public static extern uint lgLcdDeviceDescExA_Reserved1_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExA_Reserved2_set")]
  public static extern void lgLcdDeviceDescExA_Reserved2_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeviceDescExA_Reserved2_get")]
  public static extern uint lgLcdDeviceDescExA_Reserved2_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_new_lgLcdDeviceDescExA")]
  public static extern IntPtr new_lgLcdDeviceDescExA();

  [DllImport("LogitechLCD", EntryPoint="CSharp_delete_lgLcdDeviceDescExA")]
  public static extern void delete_lgLcdDeviceDescExA(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_BMP_FORMAT_160x43x1_get")]
  public static extern int LGLCD_BMP_FORMAT_160x43x1_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_BMP_FORMAT_QVGAx32_get")]
  public static extern int LGLCD_BMP_FORMAT_QVGAx32_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_BMP_WIDTH_get")]
  public static extern int LGLCD_BMP_WIDTH_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_BMP_HEIGHT_get")]
  public static extern int LGLCD_BMP_HEIGHT_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_BMP_BPP_get")]
  public static extern int LGLCD_BMP_BPP_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_BW_BMP_WIDTH_get")]
  public static extern int LGLCD_BW_BMP_WIDTH_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_BW_BMP_HEIGHT_get")]
  public static extern int LGLCD_BW_BMP_HEIGHT_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_BW_BMP_BPP_get")]
  public static extern int LGLCD_BW_BMP_BPP_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_QVGA_BMP_WIDTH_get")]
  public static extern int LGLCD_QVGA_BMP_WIDTH_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_QVGA_BMP_HEIGHT_get")]
  public static extern int LGLCD_QVGA_BMP_HEIGHT_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_QVGA_BMP_BPP_get")]
  public static extern int LGLCD_QVGA_BMP_BPP_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdBitmapHeader_Format_set")]
  public static extern void lgLcdBitmapHeader_Format_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdBitmapHeader_Format_get")]
  public static extern uint lgLcdBitmapHeader_Format_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_new_lgLcdBitmapHeader")]
  public static extern IntPtr new_lgLcdBitmapHeader();

  [DllImport("LogitechLCD", EntryPoint="CSharp_delete_lgLcdBitmapHeader")]
  public static extern void delete_lgLcdBitmapHeader(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdBitmap160x43x1_hdr_set")]
  public static extern void lgLcdBitmap160x43x1_hdr_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdBitmap160x43x1_hdr_get")]
  public static extern IntPtr lgLcdBitmap160x43x1_hdr_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdBitmap160x43x1_pixels_set")]
  public static extern void lgLcdBitmap160x43x1_pixels_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdBitmap160x43x1_pixels_get")]
  public static extern IntPtr lgLcdBitmap160x43x1_pixels_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_new_lgLcdBitmap160x43x1")]
  public static extern IntPtr new_lgLcdBitmap160x43x1();

  [DllImport("LogitechLCD", EntryPoint="CSharp_delete_lgLcdBitmap160x43x1")]
  public static extern void delete_lgLcdBitmap160x43x1(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdBitmapQVGAx32_hdr_set")]
  public static extern void lgLcdBitmapQVGAx32_hdr_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdBitmapQVGAx32_hdr_get")]
  public static extern IntPtr lgLcdBitmapQVGAx32_hdr_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdBitmapQVGAx32_pixels_set")]
  public static extern void lgLcdBitmapQVGAx32_pixels_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdBitmapQVGAx32_pixels_get")]
  public static extern IntPtr lgLcdBitmapQVGAx32_pixels_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_new_lgLcdBitmapQVGAx32")]
  public static extern IntPtr new_lgLcdBitmapQVGAx32();

  [DllImport("LogitechLCD", EntryPoint="CSharp_delete_lgLcdBitmapQVGAx32")]
  public static extern void delete_lgLcdBitmapQVGAx32(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdBitmap_hdr_set")]
  public static extern void lgLcdBitmap_hdr_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdBitmap_hdr_get")]
  public static extern IntPtr lgLcdBitmap_hdr_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdBitmap_bmp_mono_set")]
  public static extern void lgLcdBitmap_bmp_mono_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdBitmap_bmp_mono_get")]
  public static extern IntPtr lgLcdBitmap_bmp_mono_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdBitmap_bmp_qvga32_set")]
  public static extern void lgLcdBitmap_bmp_qvga32_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdBitmap_bmp_qvga32_get")]
  public static extern IntPtr lgLcdBitmap_bmp_qvga32_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_new_lgLcdBitmap")]
  public static extern IntPtr new_lgLcdBitmap();

  [DllImport("LogitechLCD", EntryPoint="CSharp_delete_lgLcdBitmap")]
  public static extern void delete_lgLcdBitmap(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_PRIORITY_IDLE_NO_SHOW_get")]
  public static extern int LGLCD_PRIORITY_IDLE_NO_SHOW_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_PRIORITY_BACKGROUND_get")]
  public static extern int LGLCD_PRIORITY_BACKGROUND_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_PRIORITY_NORMAL_get")]
  public static extern int LGLCD_PRIORITY_NORMAL_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_PRIORITY_ALERT_get")]
  public static extern int LGLCD_PRIORITY_ALERT_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_LCD_FOREGROUND_APP_NO_get")]
  public static extern int LGLCD_LCD_FOREGROUND_APP_NO_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_LCD_FOREGROUND_APP_YES_get")]
  public static extern int LGLCD_LCD_FOREGROUND_APP_YES_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_DEVICE_FAMILY_BW_160x43_GAMING_get")]
  public static extern int LGLCD_DEVICE_FAMILY_BW_160x43_GAMING_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_DEVICE_FAMILY_KEYBOARD_G15_get")]
  public static extern int LGLCD_DEVICE_FAMILY_KEYBOARD_G15_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_DEVICE_FAMILY_BW_160x43_AUDIO_get")]
  public static extern int LGLCD_DEVICE_FAMILY_BW_160x43_AUDIO_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_DEVICE_FAMILY_SPEAKERS_Z10_get")]
  public static extern int LGLCD_DEVICE_FAMILY_SPEAKERS_Z10_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_DEVICE_FAMILY_JACKBOX_get")]
  public static extern int LGLCD_DEVICE_FAMILY_JACKBOX_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_DEVICE_FAMILY_BW_160x43_BASIC_get")]
  public static extern int LGLCD_DEVICE_FAMILY_BW_160x43_BASIC_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_DEVICE_FAMILY_LCDEMULATOR_G15_get")]
  public static extern int LGLCD_DEVICE_FAMILY_LCDEMULATOR_G15_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_DEVICE_FAMILY_RAINBOW_get")]
  public static extern int LGLCD_DEVICE_FAMILY_RAINBOW_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_DEVICE_FAMILY_QVGA_BASIC_get")]
  public static extern int LGLCD_DEVICE_FAMILY_QVGA_BASIC_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_DEVICE_FAMILY_QVGA_GAMING_get")]
  public static extern int LGLCD_DEVICE_FAMILY_QVGA_GAMING_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_DEVICE_FAMILY_GAMEBOARD_G13_get")]
  public static extern int LGLCD_DEVICE_FAMILY_GAMEBOARD_G13_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_DEVICE_FAMILY_KEYBOARD_G510_get")]
  public static extern int LGLCD_DEVICE_FAMILY_KEYBOARD_G510_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_DEVICE_FAMILY_OTHER_get")]
  public static extern int LGLCD_DEVICE_FAMILY_OTHER_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_DEVICE_FAMILY_ALL_BW_160x43_get")]
  public static extern int LGLCD_DEVICE_FAMILY_ALL_BW_160x43_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_DEVICE_FAMILY_ALL_QVGA_get")]
  public static extern int LGLCD_DEVICE_FAMILY_ALL_QVGA_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_DEVICE_FAMILY_ALL_get")]
  public static extern int LGLCD_DEVICE_FAMILY_ALL_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_APPLET_CAP_BASIC_get")]
  public static extern int LGLCD_APPLET_CAP_BASIC_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_APPLET_CAP_BW_get")]
  public static extern int LGLCD_APPLET_CAP_BW_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_APPLET_CAP_QVGA_get")]
  public static extern int LGLCD_APPLET_CAP_QVGA_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_NOTIFICATION_DEVICE_ARRIVAL_get")]
  public static extern int LGLCD_NOTIFICATION_DEVICE_ARRIVAL_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_NOTIFICATION_DEVICE_REMOVAL_get")]
  public static extern int LGLCD_NOTIFICATION_DEVICE_REMOVAL_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_NOTIFICATION_CLOSE_CONNECTION_get")]
  public static extern int LGLCD_NOTIFICATION_CLOSE_CONNECTION_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_NOTIFICATION_APPLET_DISABLED_get")]
  public static extern int LGLCD_NOTIFICATION_APPLET_DISABLED_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_NOTIFICATION_APPLET_ENABLED_get")]
  public static extern int LGLCD_NOTIFICATION_APPLET_ENABLED_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_NOTIFICATION_TERMINATE_APPLET_get")]
  public static extern int LGLCD_NOTIFICATION_TERMINATE_APPLET_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_DEVICE_BW_get")]
  public static extern int LGLCD_DEVICE_BW_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_LGLCD_DEVICE_QVGA_get")]
  public static extern int LGLCD_DEVICE_QVGA_get();

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConfigureContext_configCallback_set")]
  public static extern void lgLcdConfigureContext_configCallback_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConfigureContext_configCallback_get")]
  public static extern IntPtr lgLcdConfigureContext_configCallback_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConfigureContext_configContext_set")]
  public static extern void lgLcdConfigureContext_configContext_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConfigureContext_configContext_get")]
  public static extern IntPtr lgLcdConfigureContext_configContext_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_new_lgLcdConfigureContext")]
  public static extern IntPtr new_lgLcdConfigureContext();

  [DllImport("LogitechLCD", EntryPoint="CSharp_delete_lgLcdConfigureContext")]
  public static extern void delete_lgLcdConfigureContext(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdNotificationContext_notificationCallback_set")]
  public static extern void lgLcdNotificationContext_notificationCallback_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdNotificationContext_notificationCallback_get")]
  public static extern IntPtr lgLcdNotificationContext_notificationCallback_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdNotificationContext_notifyContext_set")]
  public static extern void lgLcdNotificationContext_notifyContext_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdNotificationContext_notifyContext_get")]
  public static extern IntPtr lgLcdNotificationContext_notifyContext_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_new_lgLcdNotificationContext")]
  public static extern IntPtr new_lgLcdNotificationContext();

  [DllImport("LogitechLCD", EntryPoint="CSharp_delete_lgLcdNotificationContext")]
  public static extern void delete_lgLcdNotificationContext(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextW_appFriendlyName_set")]
  public static extern void lgLcdConnectContextW_appFriendlyName_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextW_appFriendlyName_get")]
  public static extern IntPtr lgLcdConnectContextW_appFriendlyName_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextW_isPersistent_set")]
  public static extern void lgLcdConnectContextW_isPersistent_set(HandleRef jarg1, int jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextW_isPersistent_get")]
  public static extern int lgLcdConnectContextW_isPersistent_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextW_isAutostartable_set")]
  public static extern void lgLcdConnectContextW_isAutostartable_set(HandleRef jarg1, int jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextW_isAutostartable_get")]
  public static extern int lgLcdConnectContextW_isAutostartable_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextW_onConfigure_set")]
  public static extern void lgLcdConnectContextW_onConfigure_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextW_onConfigure_get")]
  public static extern IntPtr lgLcdConnectContextW_onConfigure_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextW_connection_set")]
  public static extern void lgLcdConnectContextW_connection_set(HandleRef jarg1, int jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextW_connection_get")]
  public static extern int lgLcdConnectContextW_connection_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_new_lgLcdConnectContextW")]
  public static extern IntPtr new_lgLcdConnectContextW();

  [DllImport("LogitechLCD", EntryPoint="CSharp_delete_lgLcdConnectContextW")]
  public static extern void delete_lgLcdConnectContextW(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextA_appFriendlyName_set")]
  public static extern void lgLcdConnectContextA_appFriendlyName_set(HandleRef jarg1, string jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextA_appFriendlyName_get")]
  public static extern string lgLcdConnectContextA_appFriendlyName_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextA_isPersistent_set")]
  public static extern void lgLcdConnectContextA_isPersistent_set(HandleRef jarg1, int jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextA_isPersistent_get")]
  public static extern int lgLcdConnectContextA_isPersistent_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextA_isAutostartable_set")]
  public static extern void lgLcdConnectContextA_isAutostartable_set(HandleRef jarg1, int jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextA_isAutostartable_get")]
  public static extern int lgLcdConnectContextA_isAutostartable_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextA_onConfigure_set")]
  public static extern void lgLcdConnectContextA_onConfigure_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextA_onConfigure_get")]
  public static extern IntPtr lgLcdConnectContextA_onConfigure_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextA_connection_set")]
  public static extern void lgLcdConnectContextA_connection_set(HandleRef jarg1, int jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextA_connection_get")]
  public static extern int lgLcdConnectContextA_connection_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_new_lgLcdConnectContextA")]
  public static extern IntPtr new_lgLcdConnectContextA();

  [DllImport("LogitechLCD", EntryPoint="CSharp_delete_lgLcdConnectContextA")]
  public static extern void delete_lgLcdConnectContextA(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExW_appFriendlyName_set")]
  public static extern void lgLcdConnectContextExW_appFriendlyName_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExW_appFriendlyName_get")]
  public static extern IntPtr lgLcdConnectContextExW_appFriendlyName_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExW_isPersistent_set")]
  public static extern void lgLcdConnectContextExW_isPersistent_set(HandleRef jarg1, int jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExW_isPersistent_get")]
  public static extern int lgLcdConnectContextExW_isPersistent_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExW_isAutostartable_set")]
  public static extern void lgLcdConnectContextExW_isAutostartable_set(HandleRef jarg1, int jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExW_isAutostartable_get")]
  public static extern int lgLcdConnectContextExW_isAutostartable_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExW_onConfigure_set")]
  public static extern void lgLcdConnectContextExW_onConfigure_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExW_onConfigure_get")]
  public static extern IntPtr lgLcdConnectContextExW_onConfigure_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExW_connection_set")]
  public static extern void lgLcdConnectContextExW_connection_set(HandleRef jarg1, int jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExW_connection_get")]
  public static extern int lgLcdConnectContextExW_connection_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExW_dwAppletCapabilitiesSupported_set")]
  public static extern void lgLcdConnectContextExW_dwAppletCapabilitiesSupported_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExW_dwAppletCapabilitiesSupported_get")]
  public static extern uint lgLcdConnectContextExW_dwAppletCapabilitiesSupported_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExW_dwReserved1_set")]
  public static extern void lgLcdConnectContextExW_dwReserved1_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExW_dwReserved1_get")]
  public static extern uint lgLcdConnectContextExW_dwReserved1_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExW_onNotify_set")]
  public static extern void lgLcdConnectContextExW_onNotify_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExW_onNotify_get")]
  public static extern IntPtr lgLcdConnectContextExW_onNotify_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_new_lgLcdConnectContextExW")]
  public static extern IntPtr new_lgLcdConnectContextExW();

  [DllImport("LogitechLCD", EntryPoint="CSharp_delete_lgLcdConnectContextExW")]
  public static extern void delete_lgLcdConnectContextExW(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExA_appFriendlyName_set")]
  public static extern void lgLcdConnectContextExA_appFriendlyName_set(HandleRef jarg1, string jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExA_appFriendlyName_get")]
  public static extern string lgLcdConnectContextExA_appFriendlyName_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExA_isPersistent_set")]
  public static extern void lgLcdConnectContextExA_isPersistent_set(HandleRef jarg1, int jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExA_isPersistent_get")]
  public static extern int lgLcdConnectContextExA_isPersistent_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExA_isAutostartable_set")]
  public static extern void lgLcdConnectContextExA_isAutostartable_set(HandleRef jarg1, int jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExA_isAutostartable_get")]
  public static extern int lgLcdConnectContextExA_isAutostartable_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExA_onConfigure_set")]
  public static extern void lgLcdConnectContextExA_onConfigure_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExA_onConfigure_get")]
  public static extern IntPtr lgLcdConnectContextExA_onConfigure_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExA_connection_set")]
  public static extern void lgLcdConnectContextExA_connection_set(HandleRef jarg1, int jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExA_connection_get")]
  public static extern int lgLcdConnectContextExA_connection_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExA_dwAppletCapabilitiesSupported_set")]
  public static extern void lgLcdConnectContextExA_dwAppletCapabilitiesSupported_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExA_dwAppletCapabilitiesSupported_get")]
  public static extern uint lgLcdConnectContextExA_dwAppletCapabilitiesSupported_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExA_dwReserved1_set")]
  public static extern void lgLcdConnectContextExA_dwReserved1_set(HandleRef jarg1, uint jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExA_dwReserved1_get")]
  public static extern uint lgLcdConnectContextExA_dwReserved1_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExA_onNotify_set")]
  public static extern void lgLcdConnectContextExA_onNotify_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectContextExA_onNotify_get")]
  public static extern IntPtr lgLcdConnectContextExA_onNotify_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_new_lgLcdConnectContextExA")]
  public static extern IntPtr new_lgLcdConnectContextExA();

  [DllImport("LogitechLCD", EntryPoint="CSharp_delete_lgLcdConnectContextExA")]
  public static extern void delete_lgLcdConnectContextExA(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdSoftbuttonsChangedContext_softbuttonsChangedCallback_set")]
  public static extern void lgLcdSoftbuttonsChangedContext_softbuttonsChangedCallback_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdSoftbuttonsChangedContext_softbuttonsChangedCallback_get")]
  public static extern IntPtr lgLcdSoftbuttonsChangedContext_softbuttonsChangedCallback_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdSoftbuttonsChangedContext_softbuttonsChangedContext_set")]
  public static extern void lgLcdSoftbuttonsChangedContext_softbuttonsChangedContext_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdSoftbuttonsChangedContext_softbuttonsChangedContext_get")]
  public static extern IntPtr lgLcdSoftbuttonsChangedContext_softbuttonsChangedContext_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_new_lgLcdSoftbuttonsChangedContext")]
  public static extern IntPtr new_lgLcdSoftbuttonsChangedContext();

  [DllImport("LogitechLCD", EntryPoint="CSharp_delete_lgLcdSoftbuttonsChangedContext")]
  public static extern void delete_lgLcdSoftbuttonsChangedContext(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdOpenContext_connection_set")]
  public static extern void lgLcdOpenContext_connection_set(HandleRef jarg1, int jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdOpenContext_connection_get")]
  public static extern int lgLcdOpenContext_connection_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdOpenContext_index_set")]
  public static extern void lgLcdOpenContext_index_set(HandleRef jarg1, int jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdOpenContext_index_get")]
  public static extern int lgLcdOpenContext_index_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdOpenContext_onSoftbuttonsChanged_set")]
  public static extern void lgLcdOpenContext_onSoftbuttonsChanged_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdOpenContext_onSoftbuttonsChanged_get")]
  public static extern IntPtr lgLcdOpenContext_onSoftbuttonsChanged_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdOpenContext_device_set")]
  public static extern void lgLcdOpenContext_device_set(HandleRef jarg1, int jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdOpenContext_device_get")]
  public static extern int lgLcdOpenContext_device_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_new_lgLcdOpenContext")]
  public static extern IntPtr new_lgLcdOpenContext();

  [DllImport("LogitechLCD", EntryPoint="CSharp_delete_lgLcdOpenContext")]
  public static extern void delete_lgLcdOpenContext(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdOpenByTypeContext_connection_set")]
  public static extern void lgLcdOpenByTypeContext_connection_set(HandleRef jarg1, int jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdOpenByTypeContext_connection_get")]
  public static extern int lgLcdOpenByTypeContext_connection_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdOpenByTypeContext_deviceType_set")]
  public static extern void lgLcdOpenByTypeContext_deviceType_set(HandleRef jarg1, int jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdOpenByTypeContext_deviceType_get")]
  public static extern int lgLcdOpenByTypeContext_deviceType_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdOpenByTypeContext_onSoftbuttonsChanged_set")]
  public static extern void lgLcdOpenByTypeContext_onSoftbuttonsChanged_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdOpenByTypeContext_onSoftbuttonsChanged_get")]
  public static extern IntPtr lgLcdOpenByTypeContext_onSoftbuttonsChanged_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdOpenByTypeContext_device_set")]
  public static extern void lgLcdOpenByTypeContext_device_set(HandleRef jarg1, int jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdOpenByTypeContext_device_get")]
  public static extern int lgLcdOpenByTypeContext_device_get(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_new_lgLcdOpenByTypeContext")]
  public static extern IntPtr new_lgLcdOpenByTypeContext();

  [DllImport("LogitechLCD", EntryPoint="CSharp_delete_lgLcdOpenByTypeContext")]
  public static extern void delete_lgLcdOpenByTypeContext(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdInit")]
  public static extern uint lgLcdInit();

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDeInit")]
  public static extern uint lgLcdDeInit();

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectW")]
  public static extern uint lgLcdConnectW(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectA")]
  public static extern uint lgLcdConnectA(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectExW")]
  public static extern uint lgLcdConnectExW(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdConnectExA")]
  public static extern uint lgLcdConnectExA(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdDisconnect")]
  public static extern uint lgLcdDisconnect(int jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdSetDeviceFamiliesToUse")]
  public static extern uint lgLcdSetDeviceFamiliesToUse(int jarg1, uint jarg2, uint jarg3);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdEnumerate")]
  public static extern uint lgLcdEnumerate(int jarg1, int jarg2, HandleRef jarg3);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdEnumerateExW")]
  public static extern uint lgLcdEnumerateExW(int jarg1, int jarg2, HandleRef jarg3);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdEnumerateExA")]
  public static extern uint lgLcdEnumerateExA(int jarg1, int jarg2, HandleRef jarg3);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdOpen")]
  public static extern uint lgLcdOpen(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdOpenByType")]
  public static extern uint lgLcdOpenByType(HandleRef jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdClose")]
  public static extern uint lgLcdClose(int jarg1);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdReadSoftButtons")]
  public static extern uint lgLcdReadSoftButtons(int jarg1, HandleRef jarg2);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdUpdateBitmap")]
  public static extern uint lgLcdUpdateBitmap(int jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("LogitechLCD", EntryPoint="CSharp_lgLcdSetAsLCDForegroundApp")]
  public static extern uint lgLcdSetAsLCDForegroundApp(int jarg1, int jarg2);
}
